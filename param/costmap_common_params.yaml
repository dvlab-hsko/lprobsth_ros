max_obstacle_height: 1.00  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.12  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

#footprint: [[-0.08, -0.18], [-0.08, 0.18], [0.08, 0.18], [0.08, -0.18]]

#map_type: voxel

rgbd_obstacle_layer:
  enabled:              true
  voxel_decay:          10        #seconds if linear, e^n if exponential
  decay_model:          0         #0=linear, 1=exponential, -1=persistent
  voxel_size:            0.05   #meters
  track_unknown_space:   true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height:   1.0    #meters
  unknown_threshold:     15     #voxel height
  mark_threshold:        0      #voxel height
  update_footprint_enabled: true
  combination_method:    1      #1=max, 0=override
  obstacle_range:        3.0    #meters
  origin_z:              0.0    #meters
  publish_voxel_map:     false   # default off
  transform_tolerance:   0.2    # seconds
  mapping_mode:          false  # default off, saves map not for navigation
  map_save_duration:     60     #default 60s, how often to autosave
  #observation_sources:  pcloud_mark pcloud_clear
  pcloud_mark:
    sensor_frame: camera_depth_optical_frame
    data_type: PointCloud2
    topic: /camera/depth/color/points
    marking: true
    clearing: false
    min_obstacle_height: 0.3
    max_obstacle_height: 1.2
  pcloud_clear:
    enabled: true                #default true, can be toggled on/off with associated service call
    data_type: PointCloud2
    topic: camera1/depth/points
    marking: false
    clearing: true
    min_z: 0.1                   #default 0, meters
    max_z: 7.0                   #default 10, meters
    vertical_fov_angle: 0.99      #default 0.7, radians
    horizontal_fov_angle: 1.50   #default 1.04, radians
    decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  40.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.2  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
  map_topic:            /rtabmap_map/grid_map  


