<launch>
  <!-- Arguments -->
  <!--<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>-->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="/odometry/filtered_map" />
  <arg name="move_forward_only" default="false"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find lprobsth)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find lprobsth)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find lprobsth)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find lprobsth)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find lprobsth)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find lprobsth)/param/dwa_local_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="/point_cloud_converter/convert_points"/>
    <remap from="map" to="/rtabmap_map/octomap_grid"/>
    <!--<remap from="/move_base_simple/goal" to="/move_base/goal"/>-->
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
  </node>

        <node pkg="point_cloud_converter" name="point_cloud_converter" type="point_cloud_converter_node" >
                <!--<remap from="points_in" to="/camera/depth/color/points"/>
                <remap from="points2_out" to="convert_points" />-->

                <remap from="points2_in" to="/camera/depth/color/points"/>
                <remap from="points_out" to="/point_cloud_converter/convert_points" />
        </node>
</launch>
